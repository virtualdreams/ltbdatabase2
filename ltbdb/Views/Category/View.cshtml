@model ltbdb.Models.BookViewCategoryContainer
@using ltbdb.Models
@using ltbdb.Core

@{
	ViewBag.Title = String.Format("{0} | Lustiges Taschenbuch - Datenbank", Model.Category.Name);
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<div style="position: relative;">
	<div style="position: absolute; top: 0px; right: 0px; color: #6b7b95; font-size: 8pt;">
		Anzahl Bücher in dieser Kategorie: @Model.PageOffset.Items
		@if(Request.IsAuthenticated) {
		@:| <a href="@Url.Action("edit", "category", new { id = Model.Category.Id } )">Bearbeiten</a>
		}
	</div>
	<h2>Kategorie "@Model.Category.Name"</h2>
	<ul class="book">
		@foreach (BookModel book in Model.Books) {
			<li>
				<a href="@Url.Action("view", "book", new { id = @book.Id })">
					<div style="min-height: 120px;">
						<img src="@ImageStore.GetWebPath(book.Filename, true)" alt="Cover" />
					</div>
					<span>Nr. @book.Number - @book.Name</span>
				</a>
			</li>
		 }
	</ul>
	<div class="pager">
		@if(Model.PageOffset.HasPrevious) {
			<a href="@Url.Action("view", "category", new { id = Model.Category.Id, ofs = Model.PageOffset.Offset - Model.PageOffset.PageSize })">[zurück]</a>
		}
		@if(Model.PageOffset.HasNext) {
			<a href="@Url.Action("view", "category", new { id = Model.Category.Id, ofs = Model.PageOffset.Offset + Model.PageOffset.PageSize })">[weiter]</a>
		}
	</div>
</div>
