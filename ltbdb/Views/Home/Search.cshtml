@model ltbdb.Models.BookViewSearchContainer
@using ltbdb.Models
@using ltbdb.Core

@{
	ViewBag.Title = String.Format("Suche nach \"{0}\" | Lustiges Taschenbuch - Datenbank", Model.Query);
	Layout = "~/Views/Shared/_Layout.cshtml";
	ViewBag.Search = !String.IsNullOrEmpty(Model.Query) ? Model.Query : "";
}

<h2>Suche nach "@Model.Query"</h2>
<ul class="book">
	@foreach (var book in Model.Books) {
		<li>
			<a href="@Url.Action("view", "book", new { id = @book.Id })">
				<div style="min-height: 120px;">
					<img src="@ImageStore.GetWebPath(book.Filename, ImageType.PreferThumbnail)" alt="Cover" />
				</div>
				<span>Nr. @book.Number - @book.Name</span>
			</a>
		</li>
	}
</ul>
<div class="pager">
	@if(Model.PageOffset.HasPrevious) {
		<a href="@Url.Action("search", "home", new { q = Model.Query, ofs = Model.PageOffset.Offset - Model.PageOffset.PageSize })">[zurück]</a>
	}
	@if(Model.PageOffset.HasNext) {
		<a href="@Url.Action("search", "home", new { q = Model.Query, ofs = Model.PageOffset.Offset + Model.PageOffset.PageSize })">[weiter]</a>
	}
</div>
